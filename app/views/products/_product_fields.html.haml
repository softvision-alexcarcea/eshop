.control-group
  = form.label :name, class: "control-label"
  .controls
    = form.text_field :name, class: "span9"

.control-group
  = form.label :price, class: "control-label"
  .controls
    .input-prepend
      %span.add-on $
      = form.text_field :price, class: "span2"

.control-group
  = form.label :description, class: "control-label"
  .controls
    = form.text_area :description, rows: 5, class: "span9"

.control-group
  = form.label :categories, class: "control-label"
  .controls
    = form.collection_select :category_ids, @categories, :id, :name,
        {}, class: "span9", multiple: true

.control-group
  = form.label :tags, class: "control-label"
  .controls
    = form.hidden_field :tag_list

.control-group
  = form.label :assets, class: "control-label"
  .controls
    .actions-container
      %a.add-image.btn.btn-success{ href: "#",
        title: "Add an image to this product" } Add image...

    = form.fields_for :assets, @product.assets do |asset_form|
      - if asset_form.object.new_record?
        = asset_form.file_field :image
      - else
        = asset_form.hidden_field :_destroy

    - if @product.assets.any?
      %ul.thumbnails
        - @product.assets.each_with_index do |asset, i|
          %li.span2
            .thumbnail
              = link_to image_tag(asset.image.url(:thumbnail)),
                  asset.image.url, { title: asset.image_file_name }
              %hr.divider/
              = form.radio_button :default_asset_id, asset.id
              %a.remove-image.btn.btn-small.btn-danger{ href: "#",
                title: "Remove image", data: { id: i } } Remove

- content_for :inline_js do
  :coffeescript
    add_asset = (element) ->
      asset = "<input type=\"file\" name=\"product[asset_files][]\"/><br/>"
      element.before(asset)

    remove_asset = (element) ->
      id = element.attr("data-id")
      destroy = $("#product_assets_attributes_\#{id}__destroy")
      img = element.parent().find("img")
      if element.text() == "Remove"
        img.fadeTo("slow", 0.5)
        element.text("Undo")
        destroy.val(true)
      else
        img.fadeTo("slow", 1)
        element.text("Remove")
        destroy.val(false)
    
    format = (data) ->
      data.name
    
    $( ->
      $(".add-image").click (event) ->
        event.preventDefault()
        add_asset($(this))
      
      $(".remove-image").click (event) ->
        event.preventDefault()
        remove_asset($(this))
      
      $("#product_tag_list").select2
        ajax:
          url: "#{tags_search_path}.json"
          data: (query, page) ->
            query: query
            page: page
            
          results: (data, page) ->
            results: data
        
        formatResult: format
        formatSelection: format
        
        initSelection: (element, callback) ->
          tags = element.val().split(",")
          callback(name: tag for tag in tags)
        
        createSearchChoice: (term) ->
          name: term
        
        tokenSeparators: [',']
          
        multiple: true
        closeOnSelect: false
        id: "name"
        containerCssClass: "input span9"
        tags: []
      
      $("#product_category_ids").select2()
    )
